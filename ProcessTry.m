function [] = ProcessTry()
close all;

nElements=127;
PropagationSpeed=343;
DataRate=15e3;
ProcessorRate=100e3;
ModulationRate=0;%DataRate/20;
nSnapshots=100;
SignalDOA_DEG=52;
SignalAmplitude=1;
InterferenceDOA_DEG=90;
InterferenceAmplitude=10;
SpatialBandPass_DEG=[40 60];
MaxFilterLength=10;


TProcessor=1/ProcessorRate;
f_Signal = @(t) exp(1i*2*pi*DataRate*t);
f_Modulator = @(t) real(exp(1i*2*pi*ModulationRate*t));
f_ModulatedSignal=@(t) f_Signal(t).*(abs(f_Modulator(t))>0.5);

Lambda=PropagationSpeed/DataRate;
ElementsSpacing=0.4*Lambda;
SignalDOA_RAD=SignalDOA_DEG*pi/180;
InterferenceDOA_RAD=InterferenceDOA_DEG*pi/180;

Signal_ReceiverData=f_get_ReceiverData(...
    TProcessor,...
    nElements,...
    nSnapshots,...
    DataRate,...
    ElementsSpacing,...
    SignalDOA_RAD,...
    PropagationSpeed, ...
    f_ModulatedSignal ...
    );

Interference_ReceiverData=f_get_ReceiverData(...
    TProcessor,...
    nElements,...
    nSnapshots,...
    DataRate,...
    ElementsSpacing,...
    InterferenceDOA_RAD,...
    PropagationSpeed, ...
    f_ModulatedSignal ...
    );

SpatialBandPass_RAD=SpatialBandPass_DEG*pi/180;
RelativeBandPass=sort(cos(SpatialBandPass_RAD));
d = fdesign.bandpass('N,Fp1,Fp2,Ap',min(nElements-1,MaxFilterLength),RelativeBandPass(1),RelativeBandPass(2),1);
Hd = design(d,'cheby1');
FiltGroupDelay=ceil(max(grpdelay(Hd)));
ReceiverData=...
    SignalAmplitude*Signal_ReceiverData ...
    + ...
    InterferenceAmplitude*Interference_ReceiverData;
for RowID=1:size(ReceiverData,1)
    Filtered_ReceiverData(RowID,:)=filter(Hd,ReceiverData(RowID,:));
end
ProcessorOutput=Filtered_ReceiverData(:,FiltGroupDelay);
if false
    
    freqz(Hd);
    
    figure;plot(real(transpose(Signal_ReceiverData)));
    figure;plot(real(transpose(Interference_ReceiverData)));
    figure;plot(real(transpose(ReceiverData)));
    figure;plot(real(transpose(Filtered_ReceiverData)));
    figure;plot(real(transpose(ProcessorOutput)));
    figure;plot(real([reshape(ReceiverData(:,1),[],1) ProcessorOutput(:)]));
    
    figure;f_plot_fft(transpose(Signal_ReceiverData));
    figure;f_plot_fft(transpose(Interference_ReceiverData));
    figure;f_plot_fft(transpose(ReceiverData));
    figure;f_plot_fft(transpose(Filtered_ReceiverData));
    figure;f_plot_fft([reshape(ReceiverData(:,1),[],1) ProcessorOutput(:)]);
end

end
function [ReceiverData] = f_get_ReceiverData(...
    TProcessor,...
    nElements,...
    nSnapshots,...
    DataRate,...
    ElementsSpacing,...
    SignalDOA_RAD,...
    PropagationSpeed, ...
    f_ModulatedSignal ...
    )
SrcTau=ElementsSpacing*cos(SignalDOA_RAD)/PropagationSpeed;
ReceiverSmpTimesMAT=...
    repmat((0:(nElements-1))*SrcTau,nSnapshots,1) ...
    + ...
    repmat(reshape(TProcessor*(0:(nSnapshots-1)),[],1),1,nElements) ...
    ;
ReceiverData=f_ModulatedSignal(ReceiverSmpTimesMAT);
end
function [] = f_plot_fft(Data)
plot(linspace(-1,1,size(Data,1)),db(fftshift(fft(Data))));
end